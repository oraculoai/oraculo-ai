name: deploy

on:
  - push
  - workflow_dispatch

jobs:
  tests:
    uses: './.github/workflows/test.yml'

  project-build:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Deleting old dist
        run: rm -rf dist

      - name: Build project
        run: npm run build

      - name: Zip artifact for deployment
        if: github.ref_name == 'development' || github.ref_name == 'staging' || github.ref_name == 'main'
        run: zip release.zip ./* -r

      - name: Upload artifact
        if: github.ref_name == 'development' || github.ref_name == 'staging' || github.ref_name == 'main'
        uses: actions/upload-artifact@v3
        with:
          name: node-project
          path: release.zip
          if-no-files-found: error

  deployDev:
    needs: project-build
    name: Deploy to dev
    if: github.ref_name == 'development'
    runs-on: ubuntu-latest
    env:
      STAGE: 'development'
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: node-project

      - name: unzip artifact for deployment
        run: unzip release.zip

      - name: Serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: -c "sls deploy --stage development --region sa-east-1 --verbose"
          entrypoint: /bin/sh
        env:
          NODE_ENV: development
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deployStage:
      needs: project-build
      name: Deploy to staging
      if: github.ref_name == 'staging'
      runs-on: ubuntu-latest
      env:
        STAGE: 'staging'
      outputs:
        branch: ${{ steps.extract_branch.outputs.branch }}

      steps:
        - uses: actions/download-artifact@v3
          with:
            name: node-project

        - name: unzip artifact for deployment
          run: unzip release.zip

        - name: Serverless deploy
          uses: serverless/github-action@v3.1
          with:
            args: -c "sls deploy --stage staging --region sa-east-1 --verbose"
            entrypoint: /bin/sh
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deployProd:
      needs: project-build
      name: Deploy to production
      if: github.ref_name == 'main'
      runs-on: ubuntu-latest
      env:
        STAGE: 'production'
      outputs:
        branch: ${{ steps.extract_branch.outputs.branch }}

      steps:
        - uses: actions/download-artifact@v3
          with:
            name: node-project

        - name: unzip artifact for deployment
          run: unzip release.zip

        - name: Serverless deploy
          uses: serverless/github-action@v3.1
          with:
            args: -c "sls deploy --stage production --region sa-east-1 --verbose"
            entrypoint: /bin/sh
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deleteArtifact:
    if: github.ref_name == 'development' || github.ref_name == 'staging' || github.ref_name == 'main'
    needs: [deployProd, deployStage, deployDev]
    name: Delete artifact
    runs-on: ubuntu-latest

    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: node-project
